<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lms.admin.assignments.mapper.AssignmentMapper">
<!--    <select id="getAllAssignments" resultType="com.lms.admin.assignments.dto.AssignmentDto">-->
<!--        SELECT-->
<!--            l.lecture_id as lectureId,-->
<!--            l.lecture_name as lectureName,-->
<!--            l.student_count as studentCount,-->
<!--            p.name as professorName-->
<!--        FROM-->
<!--            lecture_info l-->
<!--                LEFT JOIN prof p ON l.lecture_id = p.prof_id;-->
<!--    </select>-->

    <select id="getAllAssignments" resultType="com.lms.admin.assignments.dto.AssignmentDto">
        SELECT
            l.lecture_id as lectureId,
            l.lecture_name as lectureName,
            l.student_count as studentCount,
            p.name as professorName,
            COUNT(DISTINCT l.lecture_id) as assignmentCount
        FROM
            lecture_info l
                LEFT JOIN prof p ON l.lecture_id = p.prof_id
                LEFT JOIN assignments a ON l.lecture_id = a.lecture_id
        WHERE
            1=1
          AND l.lecture_name LIKE CONCAT('%', '', '%')
        GROUP BY
            l.lecture_id, l.lecture_name, l.student_count, p.name;
    </select>


    <select id="searchAssignments" resultType="com.lms.admin.assignments.dto.AssignmentDto">
        SELECT
            l.lecture_id as lectureId,
            l.lecture_name as lectureName,
            p.name as professorName,
            l.student_count as studentCount,
            COUNT(DISTINCT a.lecture_id) as assignmentCount
        FROM
            lecture_info l
                LEFT JOIN prof p ON l.lecture_id = p.prof_id
                LEFT JOIN assignments a ON l.lecture_id = a.lecture_id
        WHERE
            l.lecture_name LIKE CONCAT('%', #{lectureName}, '%')
          AND (#{lectureYear} = '(전체)' OR l.lecture_year LIKE CONCAT('%', #{lectureYear}, '%'))
        GROUP BY l.lecture_id, l.lecture_name, p.name, l.student_count
    </select>

    <insert id="insertAssignment">
        INSERT INTO assignments (assignment_name, unit, status, submission_count, student_count, start_date, end_date, description, name, file_no)
            SELECT
                   a.assignment_name as assignmentName,
                   a.unit = #{unit} as unit,
                   a.status = #{status} as status,
                   a.submission_count as submissionCount,
                   l.student_count as studentCount,
                   a.start_date = #{startDate} as startDate,
                   a.end_date = #{endDate} as endDate,
                   a.description = #{description} as description,
                   p.name as professorName,
                   f.file_no as fileNo
        FROM assignments a
                JOIN lecture_info l on a.assignment_id = l.lecture_id
                JOIN prof p on a.assignment_id = p.prof_id
                JOIN file f on a.assignment_id = f.file_no
        WHERE
                a.assignment_id = #{assignmentId}
    </insert>
<!--    <insert id="insertAssignment">-->
<!--        INSERT INTO lecture_info (student_count)-->
<!--        SELECT-->
<!--            l.student_count as studentCount,-->
<!--        FROM lecture_info l-->
<!--                 JOIN assignments a on l.lecture_id = a.assignment_id-->
<!--        WHERE-->
<!--            l.lecture_id = #{lectureId}-->
<!--    </insert>-->
</mapper>
